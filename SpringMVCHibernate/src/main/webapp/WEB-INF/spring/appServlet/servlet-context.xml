<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

 <!-- packages that will scan for components -->
 <context:component-scan base-package="com.ebanks.springapp.controllers,
 										com.ebanks.springapp.dao,
 										com.ebanks.springapp.service,
 										com.ebanks.springapp.filters,
 										com.ebanks.springapp.aspects
 										com.ebanks.springapp.security
 										com.ebanks.springapp.cache"/>

 	<!-- Bean for retrieving the database properties file -->
	<beans:bean
	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<beans:property name="location">
        <beans:value>classpath:orcl.properties</beans:value>
    	</beans:property>
	</beans:bean>

    <!-- DispatcherServlet Context: defines this servlet's request-processing
        infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <!--<annotation-driven />  -->

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving
        up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- Get JDBC Template from dataSource -->
    <beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    	<beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
        in the /WEB-INF/views directory -->
    <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

 	<!-- declare datasource bean -->
	 <beans:bean id="dataSource"
 	 class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  		<beans:property name="driverClassName" value="${jdbc.driverClassName}" />
  		<beans:property name="url" value="${jdbc.url}" />
  		<beans:property name="username" value="${jdbc.username}" />
  		<beans:property name="password" value="${jdbc.password}" />
 	</beans:bean>

    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="hibernate4AnnotatedSessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>com.ebanks.springapp.model.User</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect
                </beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <!-- Bean for injecting the user DAO dependency -->
    <beans:bean id="userDAO" class="com.ebanks.springapp.dao.UserDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>

    <!-- Bean for injecting the user service dependency -->
    <beans:bean id="userService" class="com.ebanks.springapp.service.UserServiceImpl">
        <beans:property name="userDAO" ref="userDAO"></beans:property>
    </beans:bean>

    <!-- Bean for injecting the product DAO dependency -->
    <beans:bean id="productDAO" class="com.ebanks.springapp.dao.ProductDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>

    <!-- Bean for injecting the product service dependency -->
    <beans:bean id="productService" class="com.ebanks.springapp.service.ProductServiceImpl">
        <beans:property name="productDAO" ref="productDAO"></beans:property>
    </beans:bean>

    <!-- Ensures the annotations for the transaction manager are read. -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Bean for injecting the transaction manager dependency -->
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
</beans:beans>